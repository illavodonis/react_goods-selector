{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","findIndex","good","saveGoods","includes","setState","prevState","filter","item","renderListofGoods","length","slice","join","this","className","map","isSelected","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAyB,CACvBC,MAAOH,EACPI,cAAe,CAACJ,EAAgBA,EAAgBK,WAAU,SAAAC,GACxD,MAAgB,QAATA,QAJb,EAQEC,UAAY,SAACD,GACX,IAAQF,EAAkB,EAAKF,MAAvBE,cAEJA,EAAcI,SAASF,GACzB,EAAKG,UAAS,SAACC,GAAD,MAAgB,CAC5BN,cAAeM,EAAUN,cAAcO,QAAO,SAAAC,GAC5C,OAAOA,IAASN,SAIpB,EAAKG,SAAS,CACZL,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,OAnB1C,EAwBEO,kBAAoB,SAACV,GACnB,OAAqB,IAAjBA,EAAMW,OACD,oBAGY,IAAjBX,EAAMW,OACF,GAAN,OAAUX,EAAM,GAAhB,gBAGI,GAAN,OAAUA,EAAMY,MAAM,EAAG,GAAzB,gBAAmCZ,EAAMY,MAAM,GAAGC,KAAK,MAAvD,kBAjCJ,4CAoCE,WAA2B,IAAD,OACxB,EAAiCC,KAAKf,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKc,UAAU,wBAAf,UACE,oBAAIA,UAAU,oBAAd,oCACuBD,KAAKJ,kBAAkBT,MAE7CD,EAAMgB,KAAI,SAAAb,GACT,IAAMc,EAAahB,EAAcI,SAASF,GAE1C,OACE,qBAEEY,UAAWG,IACT,wBACA,CACE,WAAYD,EACZ,aAAcA,IANpB,UAUGd,EACD,wBACEY,UAAWG,IACT,SACA,CACE,WAAYD,EACZ,aAAcA,IAGlBE,KAAK,SACLC,QAAS,kBAAM,EAAKhB,UAAUD,IAThC,SAWGc,EAAa,UAAY,aArBvBd,MA2BVF,EAAcU,OAAS,GACtB,wBACEI,UAAU,mBACVI,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEL,cAAe,MAJnC,0BA7EV,GAAyBoB,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ffb034e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component <{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    selectedGoods: [goodsFromServer[goodsFromServer.findIndex(good => {\n      return good === 'Jam';\n    })]],\n  };\n\n  saveGoods = (good:string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      this.setState((prevState) => ({\n        selectedGoods: prevState.selectedGoods.filter(item => {\n          return item !== good;\n        }),\n      }));\n    } else {\n      this.setState({\n        selectedGoods: [...selectedGoods, good],\n      });\n    }\n  };\n\n  renderListofGoods = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    return `${goods.slice(0, 1)} and ${goods.slice(1).join(', ')} are selected`;\n  };\n\n  render(): React.ReactNode {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App card card-content\">\n        <h1 className=\"card-header-title\">\n          {`Selected good: - ${this.renderListofGoods(selectedGoods)}`}\n        </h1>\n        {goods.map(good => {\n          const isSelected = selectedGoods.includes(good);\n\n          return (\n            <h2\n              key={good}\n              className={classNames(\n                'notification is-light',\n                {\n                  'is-info': !isSelected,\n                  'is-success': isSelected,\n                },\n              )}\n            >\n              {good}\n              <button\n                className={classNames(\n                  'button',\n                  {\n                    'is-info': !isSelected,\n                    'is-success': isSelected,\n                  },\n                )}\n                type=\"button\"\n                onClick={() => this.saveGoods(good)}\n              >\n                {isSelected ? 'Rremove' : 'Select'}\n\n              </button>\n            </h2>\n          );\n        })}\n        {selectedGoods.length > 0 && (\n          <button\n            className=\"button is-danger\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            Clear\n          </button>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}